package com.example.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class WebCalc01Application

{
	public static void main(String[] args) {
		SpringApplication.run(WebCalc01Application.class, args);
	}

}

//説明
//この計算機を解読する方に向けて、この計算機を解読する際に１文１文解読しましょう。
//そうしないと今後苦労しますし、どことどこのコードが繋がっているのか分からないと理解が深まらないと思います。
//ですのでわからない場合、エラーを調べるだけでなくエラーが起こる前の正常な文に戻し、
//どこを消したらエラーが起こるのかなどを考えましょう。試行錯誤は大事です。
//例えば@PostMappingってなんなんだろうと感じましたら@PostMappingと調べてみましょう
//エラーが起こる際に赤い波線にカーソルを当てるとヒントが出ますのでそれも意識してみましょう
//ですが一人で抱え込むのもよくはありません、エンジニアは技術も大切ですが生産性を上げるためにも
//コミュニケーション能力はとても大切です。
//なので調べつくしても分からなくなった場合相談できる人に相談しましょう。
//
//
//
//
//豆知識も教えておきます。
//開発は普段一人で開発はしません、ですのでコードを見やすくする必要があります。
//その際には空白部分にカーソルを置いて右クリック→ソース（S）を選ぶと上から５番目ぐらいに
//フォーマット（F）が出ます、それをクリックするとそのページだけコードが自動的に綺麗になります。
//
//localhost8080を起動する際左の起動したいファイル選択→右クリック→実行→springbootで起動してもいいですが
//上の画面の実行Rの下に緑色の再生ボタンみたいなのもありますよね、その左にあるデバックで基本起動してみましょう。
//そうするとどこでエラーが起こってどこまで処理されるのかが分かりますのでデバックで起動する癖があるといいと思います！
